import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'isBalanced' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts STRING s as parameter.
     */

    public static String isBalanced(String s) {
    Stack st=new Stack();
     int flag=0;
     for(int i=0;i<s.length();i++){
         char ch=s.charAt(i);
         if(ch=='(' || ch=='[' || ch=='{'){
             st.push(ch);
         }
         else if(st.isEmpty()){
             flag=1;
             break;
         }
         else if(ch==')'){
             if((char)st.pop()!='('){
                 flag=1;
                 break;
             }
         }
         else if(ch==']'){
             if((char)st.pop()!='['){
                 flag=1;
                 break;
             }
         }
         else if(ch=='}'){
             if((char)st.pop()!='{'){
                 flag=1;
                 break;
             }
         }
     }
     if(flag==1){
         return "NO";
     }
     else if(st.isEmpty()){
         return "YES";
     }
     else{
         return "NO";
     }
     
    

    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int t = Integer.parseInt(bufferedReader.readLine().trim());

        for(int i=0;i<t;i++) {
                String s = bufferedReader.readLine();
                String result = Result.isBalanced(s);
                bufferedWriter.write(result);
                bufferedWriter.newLine();
            
        }

        bufferedReader.close();
        bufferedWriter.close();
    }
}
